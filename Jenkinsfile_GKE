node {

    def commitHash, commitHashShort, commitUrl
    def project = "navikt"
    def app = "foreldrepengesoknad-api"
    def committer, committerEmail, changelog, releaseVersion
    def appConfig = "nais.yaml"
    def dockerRepo = "repo.adeo.no:5443"
    def branch = "master"
    def groupId = "nais"
    def environment = 't1'
    def zone = 'sbs'
    def namespace = 'default'

    stage("Checkout") {
        cleanWs()
        withCredentials([string(credentialsId: 'OAUTH_TOKEN', variable: 'token')]) {
            withEnv(['HTTPS_PROXY=http://webproxy-utvikler.nav.no:8088']) {
                sh(script: "git clone https://${token}:x-oauth-basic@github.com/${project}/${app}.git -b ${branch} .")
            }
        }
        commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
        commitHashShort = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
        commitUrl = "https://github.com/${project}/${app}/commit/${commitHash}"
        committer = sh(script: 'git log -1 --pretty=format:"%an"', returnStdout: true).trim()
        committerEmail = sh(script: 'git log -1 --pretty=format:"%ae"', returnStdout: true).trim()
        changelog = sh(script: 'git log `git describe --tags --abbrev=0`..HEAD --oneline', returnStdout: true)

        releaseVersion = "${env.major_version}.${env.BUILD_NUMBER}-${commitHashShort}"
        echo "release version: ${releaseVersion}"
    }

    stage('Deploy to preprod') {
            withCredentials([usernamePassword(credentialsId: 'srvJenkinsBris', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD'), string(credentialsId: 'OAUTH_TOKEN', variable: 'token')]) {
                withEnv(['HTTPS_PROXY=http://webproxy-internett.nav.no:8088',
                    'HTTP_PROXY=http://webproxy-internett.nav.no:8088',
                    'https_proxy=http://webproxy-internett.nav.no:8088',
                    'http_proxy=http://webproxy-internett.nav.no:8088',
                    'NO_PROXY=localhost,127.0.0.1,.local,.adeo.no,.nav.no,.aetat.no,.devillo.no,.oera.no',
                    'no_proxy=localhost,127.0.0.1,.local,.adeo.no,.nav.no,.aetat.no,.devillo.no,.oera.no']) {
                    def deployOk = deployToNais("foreldrepengesoknad-api", "LATEST", "t1", "sbs", "${USERNAME}", "${PASSWORD}", "bris", "https://${token}:x-oauth-basic@raw.githubusercontent.com/navikt/engangsstonad/master/nais.yaml")
                    if (!deployOk) {
                        currentBuild.result = "FAILURE"
                        return
                    }
                }
            }
        }

    }

    def deployToNais(appname, version, fasitEnvironment, zone, fasitUsername, fasitPassword, namespace, manifesturl) {
        withEnv(['HTTPS_PROXY=http://webproxy-internett.nav.no:8088',
            'HTTP_PROXY=http://webproxy-internett.nav.no:8088',
            'https_proxy=http://webproxy-internett.nav.no:8088',
            'http_proxy=http://webproxy-internett.nav.no:8088',
            'NO_PROXY=localhost,127.0.0.1,.local,.adeo.no,.nav.no,.aetat.no,.devillo.no,.oera.no',
            'no_proxy=localhost,127.0.0.1,.local,.adeo.no,.nav.no,.aetat.no,.devillo.no,.oera.no']) {
            def retVal = sh(script:"""
                curl -k -d "{\\"application\\": \\"${appname}\\", \\"version\\": \\"${version}\\", \\"fasitEnvironment\\": \\"${fasitEnvironment}\\", \\"zone\\": \\"${zone}\\", \\"fasitUsername\\": \\"${fasitUsername}\\", \\"fasitPassword\\": \\"${fasitPassword}\\", \\"namespace\\": \\"${namespace}\\", \\"manifesturl\\": \\"${manifesturl}\\"}" http://35.187.46.35/deploy
                """, returnStdout: true)
            if (retVal.indexOf("created deployment") != -1) {
                println("Success!")
                return true
            } else {
                println "[FAILURE] Unable to deploy ${appname} to ${zone}/${namespace}: ${retVal}"
                return false
            }
        }
    }